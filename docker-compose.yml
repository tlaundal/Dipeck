version: "3.4"

x-environment:
  &default-env
  DIPECK_MQ_HOST: "message_queue"
  DIPECK_MQ_USER: "message_queue_user"
  DIPECK_MQ_PASS: "EJWSYRYNNtqDkd4V"
  DIPECK_CACHE_HOST: "cache"

services:
  cache:
    image: redis:3.2.11
    healthcheck:
      test: ["CMD-SHELL", "ping=$$(redis-cli -h $$(hostname -i || echo '127.0.0.1') ping) && [ \"$$ping\" = 'PONG' ] || exit 1"]
      interval: 5s

  message_queue:
    image: rabbitmq:3.7.4
    hostname: message_queue
    healthcheck:
      test: ["CMD-SHELL", "[ \"$$(rabbitmqctl status)\" ] || exit 1"]
      interval: 5s
    environment:
      RABBITMQ_DEFAULT_USER: "message_queue_user"
      RABBITMQ_DEFAULT_PASS: "EJWSYRYNNtqDkd4V"

  request:
    build: ./request/
    depends_on:
      - message_queue
      - cache
    environment: *default-env

  frontend:
    build: ./frontend/
    depends_on:
      - request
      - notification
    ports:
      - "80:80"

  worker:
    build: ./worker/
    depends_on:
      - message_queue
      - cache
    environment: *default-env

  notification:
    build: ./notification/
    depends_on:
      - cache
    environment: *default-env
