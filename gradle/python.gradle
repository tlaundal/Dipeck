class PythonPluginExtension {
  Project project

  String sources = null
  String tests = null
  Object reportPath = "${ -> project.buildDir}/test-results/test/TEST-${ -> project.name}.xml"

  PythonPluginExtension(Project project) {
    this.project = project
  }
}

def extension = project.extensions.create('python', PythonPluginExtension, project)

apply plugin: "io.totokaka.gradle.pyenv"


task pipDependencies(type: VenvExec) {
  dependsOn createVenv

  inputs.file "requirements.txt"
  outputs.dir "${project.extensions.pyenv.environment}/lib/python3.6/site-packages/"

  executable "pip"
  arguments 'install', '-r', 'requirements.txt'
}

task test(type: VenvExec, dependsOn: pipDependencies) {
  if (extension.sources) {
    inputs.dir extension.sources
  }
  if (extension.tests) {
    inputs.dir extension.tests
  }

  outputs.file extension.reportPath

  executable 'pytest'
  arguments '-q', "--junitxml=${extension.reportPath}"
}

check.dependsOn test
assemble.dependsOn pipDependencies
